version: "3"
volumes:
  db_data:
networks:
  keycloak_net:
    external: true  
services:
  proxy:
    image: nginx:alpine
    container_name: nginx
    ports:
      - 4000:80
    networks:
      - keycloak_net
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - grafana1
      - grafana2
  postgres:
    container_name: postgres
    image: postgres:12-alpine
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_DB: ${POSTGRESQL_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - keycloak_net
    healthcheck:
      test: pg_isready -U keycloak
  grafana1:
    container_name: grafana1
    image: grafana/grafana:7.4.1
    networks:
      - keycloak_net
    expose:
      - 4000
    volumes:
      - ./plugins:/var/lib/grafana/plugins
      - ./conf/grafana.ini:/etc/grafana/grafana.ini
    depends_on:
      postgres:
         condition: service_healthy
  grafana2:
    container_name: grafana2
    image: grafana/grafana:7.4.1
    networks:
      - keycloak_net
    expose:
      - 4000
    volumes:
      - ./plugins:/var/lib/grafana/plugins
      - ./conf/grafana.ini:/etc/grafana/grafana.ini
    depends_on:
      postgres:
         condition: service_healthy
  keycloak:
    image: quay.io/keycloak/keycloak:17.0.1
    env_file:
      - .env
    container_name: local_keycloak
    hostname: ${HOST}
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: ${POSTGRESQL_DB}
      DB_USER: ${POSTGRESQL_USER}
      DB_PASSWORD: ${POSTGRESQL_PASS}
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_STRICT_HTTPS: 'false'
    command: 
      - 'start'
      - '--auto-build'
      - '--db=postgres'
      - '--hostname=${HOST}'
      - '--https-certificate-file=/certs/cert.pem'
      - '--https-certificate-key-file=/certs/key.pem' 
      - '--db-url-host=postgres'
      - '--db-username=${POSTGRESQL_USER}'
      - '--db-password=${POSTGRESQL_PASS}'
    volumes: 
      - ./certs:/certs
    ports:
      - "8443:8443"
    restart: unless-stopped
    networks:
      - keycloak_net
    depends_on:
      postgres:
         condition: service_healthy
